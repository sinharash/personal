# Simple 2-Step YAML - Extract reference + Fetch entity

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: simple-enhanced-entity-picker
  title: Simple Enhanced Entity Picker
  description: 2-step approach - extract reference then fetch entity
spec:
  owner: platform-team
  type: test

  parameters:
    - title: Select Entity
      required:
        - selectedEntity
      properties:
        selectedEntity:
          title: Choose User
          type: string
          ui:field: EnhancedEntityPicker
          ui:options:
            displayEntityFieldAfterFormatting: "${{ metadata.title }} - ${{ spec.profile.department }}"
            catalogFilter:
              kind: User

  steps:
    # STEP 1: Extract entity reference from display value (no HTTP calls)
    - id: extract-reference
      name: Extract Entity Reference
      action: enhanced:resolveEntity
      input:
        displayValue: ${{ parameters.selectedEntity }}
        displayTemplate: "${{ metadata.title }} - ${{ spec.profile.department }}"
        entityKind: "User"
        entityNamespace: "default"

    # STEP 2: Use built-in catalog:fetch to get full entity data (has proper auth)
    - id: fetch-entity
      name: Fetch Entity Data
      action: catalog:fetch
      input:
        entityRef: ${{ steps['extract-reference'].output.entityRef }}

    # RESULT: Show that we have full entity access
    - id: show-result
      name: Show Result
      action: debug:log
      input:
        message: |
          âœ… SUCCESS! Enhanced Entity Picker Working:

          ðŸ‘¤ User Selected: ${{ parameters.selectedEntity }}
          ðŸ”— Entity Reference: ${{ steps['extract-reference'].output.entityRef }}

          ðŸ“‹ Full Entity Data Available:
          - Name: ${{ steps['fetch-entity'].output.entity.metadata.name }}
          - Title: ${{ steps['fetch-entity'].output.entity.metadata.title || 'N/A' }}
          - Department: ${{ steps['fetch-entity'].output.entity.spec.profile.department || 'N/A' }}
          - Email: ${{ steps['fetch-entity'].output.entity.spec.profile.email || 'N/A' }}

          ðŸŽ¯ Perfect! You now have:
          1. Clean user experience (they see: "${{ parameters.selectedEntity }}")
          2. Full programmatic access to entity data
          3. No authentication issues
