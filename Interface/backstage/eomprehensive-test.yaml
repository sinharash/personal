apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: entity-picker-comprehensive-test
  title: Entity Picker Comprehensive Test
  description: Tests ALL features of EntityPicker and EnhancedEntityPicker
  tags:
    - test
    - entity-picker
spec:
  owner: platform-team
  type: test

  parameters:
    # ========================================
    # SECTION 1: Basic EntityPicker Features
    # ========================================
    - title: "1. Basic EntityPicker Features (Works with Both)"
      properties:
        # Test 1: Simple entity selection
        test1_simple:
          title: "Test 1: Simple Selection"
          type: string
          description: "Basic entity selection without any options"
          ui:field: EntityPicker # Change to EnhancedEntityPicker to test

        # Test 2: With catalogFilter (single kind)
        test2_catalogFilter_single:
          title: "Test 2: Catalog Filter - Single Kind"
          type: string
          description: "Filter by single entity kind"
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: User

        # Test 3: With catalogFilter (multiple kinds)
        test3_catalogFilter_multiple:
          title: "Test 3: Catalog Filter - Multiple Kinds"
          type: string
          description: "Filter by multiple entity kinds"
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - User
                - Group

        # Test 4: Complex catalogFilter
        test4_catalogFilter_complex:
          title: "Test 4: Complex Catalog Filter"
          type: string
          description: "Filter by kind and type"
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Component
              spec.type:
                - service
                - website
              spec.lifecycle: production

        # Test 5: DEPRECATED allowedKinds
        test5_allowedKinds:
          title: "Test 5: Allowed Kinds (Deprecated)"
          type: string
          description: "Using deprecated allowedKinds"
          ui:field: EntityPicker
          ui:options:
            allowedKinds:
              - User
              - Group

        # Test 6: defaultKind
        test6_defaultKind:
          title: "Test 6: Default Kind"
          type: string
          description: "Sets default kind to System"
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: System
            defaultKind: System

        # Test 7: defaultNamespace
        test7_defaultNamespace:
          title: "Test 7: Default Namespace"
          type: string
          description: "Sets default namespace"
          ui:field: EntityPicker
          ui:options:
            defaultNamespace: production

        # Test 8: allowArbitraryValues true
        test8_arbitrary_true:
          title: "Test 8: Allow Arbitrary Values (true)"
          type: string
          description: "Allows typing custom values"
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: true
            catalogFilter:
              kind: Component

        # Test 9: allowArbitraryValues false
        test9_arbitrary_false:
          title: "Test 9: Allow Arbitrary Values (false)"
          type: string
          description: "Restricts to catalog entities only"
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            catalogFilter:
              kind: Component

        # Test 10: defaultEntityRef
        test10_defaultEntityRef:
          title: "Test 10: Default Entity Reference"
          type: string
          description: "Pre-selects a specific entity"
          ui:field: EntityPicker
          ui:options:
            defaultEntityRef: "component:default/example-website"
            catalogFilter:
              kind: Component

    # ========================================
    # SECTION 2: Advanced Filters
    # ========================================
    - title: "2. Advanced Catalog Filters"
      properties:
        # Test 11: Filter with exists operator
        test11_filter_exists:
          title: "Test 11: Filter with Exists"
          type: string
          description: "Using exists operator"
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Component
              metadata.annotations.github.com/project-slug:
                exists: true

        # Test 12: Multiple filter conditions
        test12_filter_multiple:
          title: "Test 12: Multiple Filter Conditions"
          type: string
          description: "Complex filter with multiple conditions"
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Component
              spec.type: service
              spec.lifecycle:
                - production
                - experimental
              metadata.tags:
                - java
                - kotlin

    # ========================================
    # SECTION 3: EnhancedEntityPicker Features
    # ========================================
    - title: "3. Enhanced Entity Picker Features"
      properties:
        # Test 13: Display formatting - simple
        test13_display_simple:
          title: "Test 13: Simple Display Format"
          type: string
          description: "Shows title instead of entity ref"
          ui:field: EnhancedEntityPicker
          ui:options:
            catalogFilter:
              kind: User
            displayEntityFieldAfterFormatting: "{{ metadata.title }}"
            hiddenFieldName: "test13_entityRef"

        # Test 14: Display formatting - complex
        test14_display_complex:
          title: "Test 14: Complex Display Format"
          type: string
          description: "Shows formatted user info"
          ui:field: EnhancedEntityPicker
          ui:options:
            catalogFilter:
              kind: User
            displayEntityFieldAfterFormatting: "{{ metadata.title }} - {{ spec.profile.email }}"
            hiddenFieldName: "test14_entityRef"

        # Test 15: Display formatting - with fallback
        test15_display_fallback:
          title: "Test 15: Display with Fallback"
          type: string
          description: "Uses fallback if title not available"
          ui:field: EnhancedEntityPicker
          ui:options:
            catalogFilter:
              kind: Component
            displayEntityFieldAfterFormatting: "{{ metadata.title }} || {{ metadata.name }}"
            hiddenFieldName: "test15_entityRef"

        # Test 16: Custom unique identifier
        test16_unique_identifier:
          title: "Test 16: Custom Unique Identifier"
          type: string
          description: "Uses custom field as identifier"
          ui:field: EnhancedEntityPicker
          ui:options:
            catalogFilter:
              kind: Resource
            uniqueIdentifierField: "metadata.uid"
            displayEntityFieldAfterFormatting: "{{ metadata.title }}"
            hiddenFieldName: "test16_entityRef"

        # Test 17: Custom placeholder
        test17_placeholder:
          title: "Test 17: Custom Placeholder"
          type: string
          description: "Custom placeholder text"
          ui:field: EnhancedEntityPicker
          ui:options:
            catalogFilter:
              kind: System
            placeholder: "Select a system from the catalog..."
            displayEntityFieldAfterFormatting: "{{ metadata.title }} ({{ metadata.description }})"
            hiddenFieldName: "test17_entityRef"

        # Test 18: All features combined
        test18_all_features:
          title: "Test 18: All Features Combined"
          type: string
          description: "Uses all EnhancedEntityPicker features"
          ui:field: EnhancedEntityPicker
          ui:options:
            catalogFilter:
              kind: Component
              spec.type: service
            defaultKind: Component
            defaultNamespace: default
            allowArbitraryValues: false
            placeholder: "Select a service component..."
            displayEntityFieldAfterFormatting: "{{ metadata.title }} - {{ spec.type }} ({{ spec.lifecycle }})"
            uniqueIdentifierField: "metadata.name"
            hiddenFieldName: "test18_entityRef"

    # Hidden fields for EnhancedEntityPicker
    - title: "Hidden Fields (for EnhancedEntityPicker)"
      properties:
        test13_entityRef:
          type: string
          ui:widget: hidden
        test14_entityRef:
          type: string
          ui:widget: hidden
        test15_entityRef:
          type: string
          ui:widget: hidden
        test16_entityRef:
          type: string
          ui:widget: hidden
        test17_entityRef:
          type: string
          ui:widget: hidden
        test18_entityRef:
          type: string
          ui:widget: hidden

  steps:
    # ========================================
    # STEP 1: Log all basic selections
    # ========================================
    - id: log-basic-selections
      name: "📋 Log Basic EntityPicker Selections"
      action: debug:log
      input:
        message: |
          ===== BASIC ENTITYPICKER RESULTS =====

          Test 1 - Simple: ${{ parameters.test1_simple }}
          Test 2 - Single Kind Filter: ${{ parameters.test2_catalogFilter_single }}
          Test 3 - Multiple Kinds Filter: ${{ parameters.test3_catalogFilter_multiple }}
          Test 4 - Complex Filter: ${{ parameters.test4_catalogFilter_complex }}
          Test 5 - Allowed Kinds (deprecated): ${{ parameters.test5_allowedKinds }}
          Test 6 - Default Kind: ${{ parameters.test6_defaultKind }}
          Test 7 - Default Namespace: ${{ parameters.test7_defaultNamespace }}
          Test 8 - Arbitrary Values (true): ${{ parameters.test8_arbitrary_true }}
          Test 9 - Arbitrary Values (false): ${{ parameters.test9_arbitrary_false }}
          Test 10 - Default Entity Ref: ${{ parameters.test10_defaultEntityRef }}

    # ========================================
    # STEP 2: Log advanced filter results
    # ========================================
    - id: log-advanced-filters
      name: "🔍 Log Advanced Filter Results"
      action: debug:log
      input:
        message: |
          ===== ADVANCED FILTER RESULTS =====

          Test 11 - Exists Filter: ${{ parameters.test11_filter_exists }}
          Test 12 - Multiple Conditions: ${{ parameters.test12_filter_multiple }}

    # ========================================
    # STEP 3: Log enhanced features
    # ========================================
    - id: log-enhanced-features
      name: "✨ Log Enhanced Features"
      action: debug:log
      input:
        message: |
          ===== ENHANCED ENTITYPICKER RESULTS =====

          Test 13 - Simple Display:
            Display Value: ${{ parameters.test13_display_simple }}
            Hidden Entity Ref: ${{ parameters.test13_entityRef }}

          Test 14 - Complex Display:
            Display Value: ${{ parameters.test14_display_complex }}
            Hidden Entity Ref: ${{ parameters.test14_entityRef }}

          Test 15 - Fallback Display:
            Display Value: ${{ parameters.test15_display_fallback }}
            Hidden Entity Ref: ${{ parameters.test15_entityRef }}

          Test 16 - Custom Identifier:
            Display Value: ${{ parameters.test16_unique_identifier }}
            Hidden Entity Ref: ${{ parameters.test16_entityRef }}

          Test 17 - Custom Placeholder:
            Display Value: ${{ parameters.test17_placeholder }}
            Hidden Entity Ref: ${{ parameters.test17_entityRef }}

          Test 18 - All Features:
            Display Value: ${{ parameters.test18_all_features }}
            Hidden Entity Ref: ${{ parameters.test18_entityRef }}

    # ========================================
    # STEP 4: Fetch entities using hidden refs
    # ========================================
    - id: fetch-entity-13
      name: "Fetch Entity from Test 13"
      action: catalog:fetch
      input:
        entityRef: ${{ parameters.test13_entityRef }}
      continueOnError: true

    - id: fetch-entity-14
      name: "Fetch Entity from Test 14"
      action: catalog:fetch
      input:
        entityRef: ${{ parameters.test14_entityRef }}
      continueOnError: true

    - id: fetch-entity-18
      name: "Fetch Entity from Test 18"
      action: catalog:fetch
      input:
        entityRef: ${{ parameters.test18_entityRef }}
      continueOnError: true

    # ========================================
    # STEP 5: Log fetched entity details
    # ========================================
    - id: log-fetched-entities
      name: "📊 Log Fetched Entity Details"
      action: debug:log
      input:
        message: |
          ===== FETCHED ENTITY DETAILS =====

          Test 13 Entity:
            Name: ${{ steps['fetch-entity-13'].output.entity.metadata.name }}
            Title: ${{ steps['fetch-entity-13'].output.entity.metadata.title }}
            Kind: ${{ steps['fetch-entity-13'].output.entity.kind }}

          Test 14 Entity:
            Name: ${{ steps['fetch-entity-14'].output.entity.metadata.name }}
            Title: ${{ steps['fetch-entity-14'].output.entity.metadata.title }}
            Email: ${{ steps['fetch-entity-14'].output.entity.spec.profile.email }}

          Test 18 Entity:
            Name: ${{ steps['fetch-entity-18'].output.entity.metadata.name }}
            Title: ${{ steps['fetch-entity-18'].output.entity.metadata.title }}
            Type: ${{ steps['fetch-entity-18'].output.entity.spec.type }}
            Lifecycle: ${{ steps['fetch-entity-18'].output.entity.spec.lifecycle }}

    # ========================================
    # STEP 6: Summary comparison
    # ========================================
    - id: log-summary
      name: "📈 Summary Comparison"
      action: debug:log
      input:
        message: |
          ===== FEATURE COMPARISON SUMMARY =====

          ✅ Both EntityPicker and EnhancedEntityPicker support:
          - Basic entity selection
          - Catalog filters (single/multiple kinds, complex filters)
          - Deprecated allowedKinds
          - defaultKind and defaultNamespace
          - allowArbitraryValues (true/false)
          - defaultEntityRef
          - exists operator in filters

          ✨ EnhancedEntityPicker additionally provides:
          - Custom display formatting (with templates)
          - Fallback syntax for display values
          - Hidden field storage for entity references
          - Custom unique identifier fields
          - Custom placeholder text
          - Full entity access via catalog:fetch

          🎯 Key Benefit: EnhancedEntityPicker shows user-friendly text
          while storing entity references for template processing!

  output:
    text:
      - title: Test Results
        content: |
          All tests completed! Check the logs for detailed results.

          To test with EnhancedEntityPicker:
          1. Replace ui:field: EntityPicker with ui:field: EnhancedEntityPicker
          2. Run the same tests to verify feature parity
          3. Test the enhanced features in Section 3
