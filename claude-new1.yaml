apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: enhanced-entity-picker-demo
  title: Enhanced Entity Picker Demo
  description: Demonstrates the EnhancedEntityPicker with hidden entity reference
spec:
  owner: user:default/example-owner
  type: service
  parameters:
    - title: Basic Information
      required:
        - name
        - secondaryOwner
      properties:
        name:
          title: Name
          type: string
          description: Name of the component
        secondaryOwner:
          title: Secondary Owner
          type: string
          description: You will be primary owner, please choose a secondary owner
          ui:field: EnhancedEntityPicker
          ui:options:
            # Format for display
            displayEntityFieldAfterFormatting: ${{ metadata.name }} (${{ spec.profile.email }}) - ${{ spec.profile.displayName }}
            # Store entity reference in a hidden field
            entityRefField: secondaryOwnerRef
            catalogFilter:
              kind: User
        # Hidden field to store the entity reference
        secondaryOwnerRef:
          title: Secondary Owner Reference
          type: string
          description: Entity reference for the secondary owner
          ui:widget: hidden

  steps:
    # For debugging: Log both values
    - id: log-values
      name: Log Values
      action: debug:log
      input:
        message: |
          Selected secondary owner values:
          Display Value: ${{ parameters.secondaryOwner }}
          Entity Reference: ${{ parameters.secondaryOwnerRef }}

    # Use the catalog:fetch action with the entity reference
    - id: fetch-entity
      name: Fetch Entity
      action: catalog:fetch
      input:
        entityRef: "${{ parameters.secondaryOwnerRef }}"

    # Use the entity data in subsequent steps
    - id: use-entity-data
      name: Use Entity Data
      action: debug:log
      input:
        message: |
          Secondary owner details:
          Display: ${{ parameters.secondaryOwner }}
          Entity Ref: ${{ parameters.secondaryOwnerRef }}
          Name: ${{ steps['fetch-entity'].output.entity.metadata.name }}
          Email: ${{ steps['fetch-entity'].output.entity.spec.profile.email }}
          Display Name: ${{ steps['fetch-entity'].output.entity.spec.profile.displayName }}
          Job Title: ${{ steps['fetch-entity'].output.entity.spec.profile.jobTitle || 'N/A' }}
          Department: ${{ steps['fetch-entity'].output.entity.spec.profile.department || 'N/A' }}

    # Example of using the entity data in a real step
    - id: generate-owners-file
      name: Generate OWNERS file
      action: roadiehq:utils:fs:write
      input:
        path: OWNERS
        content: |
          # This file is generated - do not edit manually

          # Default owner
          primary: default-user@example.com

          # Secondary owner
          secondary: ${{ steps['fetch-entity'].output.entity.spec.profile.email }}
          secondary_name: ${{ steps['fetch-entity'].output.entity.spec.profile.displayName }}
          secondary_title: ${{ steps['fetch-entity'].output.entity.spec.profile.jobTitle || 'N/A' }}
